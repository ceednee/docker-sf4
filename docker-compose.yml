version: '2'
services:
    memcached:
        image: memcached:alpine
        container_name: docker-memcached

    db:
        #build: ./mysql
        image: mysql:8.0.22
        container_name: docker-mysql
        ports:
            - "3306:3306"
        volumes:
            - "./.data/mysql/db:/var/lib/mysql:rw"
            - "./.data/mysql/var/run/mysqld:/var/run/mysqld:rw"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        networks:
            - backend

    postgres:
        image: postgres
        container_name: docker-postgres
        restart: always
        ports:
            - "5432:5432"
        environment:
            LC_ALL: C.UTF-8
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DATABASE: ${POSTGRES_DATABASE}
        networks:
            - backend

    adminer:
        image: adminer
        container_name: docker-adminer
        restart: always
        ports:
            - 8080:8080
        networks:
            - backend

    php:
        build: ./php-fpm
        container_name: docker-php
        ports:
            - "9000:9000"
        volumes:
            - ${SF_APP_PATH}:/var/www
        depends_on:
            - db
        networks:
            - frontend
            - backend

    nginx:
        build: ./nginx
        container_name: docker-nginx
        ports:
            - "80:80"
        volumes_from:
            - php
        volumes:
            - ./logs/nginx/:/var/log/nginx
        networks:
            - backend
        depends_on:
            - php

    maildev:
        image: djfarrelly/maildev
        container_name: docker-mail
        ports:
            - 1080:80
            - 1025:25
        networks:
            backend:
                aliases:
                    - fakesmtp

    mongodb:
        image: mongo:latest
        container_name: docker-mongodb
        environment:
          - MONGO_INITDB_DATABASE=strapi
          - MONGO_DATA_DIR=/data/db
          - MONGO_LOG_DIR=/dev/null
          - MONGODB_ADMIN_USER=${MONGODB_ADMIN_USER}
          - MONGODB_ADMIN_PASS=${MONGODB_ADMIN_PASS}
          - MONGODB_USER=${MONGODB_USER}
          - MONGODB_PASS=${MONGODB_PASS}
        volumes:
          - ./data/mongo/db:/data/db
        ports:
          - 27017:27017
        #command: mongod --smallfiles --logpath=/dev/null # --quiet

    strapi:
        image: strapi/strapi
        environment:
          DATABASE_CLIENT: postgres
          DATABASE_NAME: ${DATABASE_NAME}
          DATABASE_HOST: postgres
          DATABASE_PORT: 5432
          DATABASE_USERNAME: ${DATABASE_USERNAME}
          DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        links:
          - postgres:postgres
        volumes:
          - ./app:/srv/app
        ports:
          - '1337:1337'
        networks:
          - backend

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    sf_dev-sync:
        external: true
